import org.hidetake.gradle.swagger.generator.GenerateSwaggerUI
import org.springframework.boot.gradle.tasks.bundling.BootJar

// buildscript 추가
buildscript {
    ext {
        restdocsApiSpecVersion = '0.18.4'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'

    // openAPI 플러그인 추가
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
    // swagger generator 플러그인 추가
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'com.yjblog'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

// swaggerSources 설정 추가
swaggerSources {
    sample {
        setInputFile(file("${project.buildDir}/api-spec/openapi3.json"))
        }
    }

// openapi3 스펙 생성시 설정 정보
openapi3 {
    servers = [
            { url = "http://배포중인 주소" },
            { url = "http://localhost:8080" }
    ]
    title = "yjBlog API" // API 문서 이름
    description = "Spring Rest Docs With SwaggerUI." // API 상세정보
    version = "0.0.1" // API 버전
    format = "json" // 생성될 openAPI3 스펙 파일 타입
    outputDirectory = 'build/resources/main/static/docs' // 경로
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'


    // SwaggerUI 추가
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    // 7. RestDocs 추가
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    // 8. openAPI3 추가
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:' + restdocsApiSpecVersion
    // Swagger 의존성 추가
    swaggerUI 'org.webjars:swagger-ui:4.11.1'

    // QueryDSL Implementation
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

/**
 * QueryDSL Build Options
 */
def querydslDir = "src/main/generated"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}

// openapi3가 먼저 실행 - doFrist를 통한 Header 설정도 가능
tasks.withType(GenerateSwaggerUI) {
    dependsOn 'openapi3'
/*    doFirst {
        file("${openapi3.outputDirectory}/openapi3.json")
    }*/
    copy {
        from 'build/resources/main/static/docs/'
        into 'src/main/resources/static/docs/'
    }

}

// 생성된 openapi3 스펙을 기반으로 SwaggerUISample 생성 및 static/docs 패키지에 복사
bootJar {
    dependsOn generateSwaggerUISample
    from("${generateSwaggerUISample.outputDir}") {
        into 'src/main/resources/static/docs/'
    }
}